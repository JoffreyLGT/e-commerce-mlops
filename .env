# -----------------------------------------------------
# Global
# -----------------------------------------------------
# TODO Explain what DOMAIN is for
DOMAIN=localhost

# Network used in Docker for both signoz and our containers
DOCKER_NETWORK=product-classification

# Target environment must be development, staging or production
# ENV_TARGET=development

# Force the reset of venv during projects setup
# RESET_VENV=true

# True to use DB container instead of local PostgreSQL
# Only used for local installation, since dev container has $IS_DEV_CONTAINER=true
USE_DB_CONTAINER=true

# -----------------------------------------------------
# backend
# -----------------------------------------------------
# TODO Explain what PROJECT_NAME is for
PROJECT_NAME="Product Classification"

# TODO Explain what SECRET_KEY is for
SECRET_KEY=changethis

# Admin user created in DB to use the API
# Outside of dev environment, you should store them in secrets
FIRST_ADMINUSER=admin@test.com
FIRST_ADMINUSER_PASSWORD=changethis

# CORS origin to accept API requests
BACKEND_CORS_ORIGINS=["http://localhost:8000"]

# Connection information to send telemetry to Signoz
OTEL_RESOURCE_ATTRIBUTES="service.name=product-classification-api"
OTEL_EXPORTER_OTLP_ENDPOINT="http://otel-collector:4318"

# Postgres server configuration
POSTGRES_SERVER=db
POSTGRES_DB=product-classification

# First PostgreSQL admin user
# Outside of dev environment, you should store them in secrets
POSTGRES_USER=admin
POSTGRES_PASSWORD=changethis

# -----------------------------------------------------
# datascience
# -----------------------------------------------------
# Define the minimum log level to print in console
# Possible values are "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"
# CONSOLE_LOG_LEVEL="WARNING"
CONSOLE_LOG_LEVEL="INFO"

# Define where logs are stored
LOGS_DIR="logs"
LOGS_FILE_NAME="datascience.log.json"
# Preprocessed target images characteristics
IMG_WIDTH=224
IMG_HEIGHT=224
IMG_KEEP_RATIO=True
IMG_GRAYSCALED=False
# Number of threads to use when doing images conversion
IMG_NB_THREADS=4
# Directory where data used to train the models are stored. Must contain the files bellow:
# originals
# ├── X.csv  Contains the features: [linenumber,designation,description,productid,imageid]
# ├── images Contains one image per product named "image_{imageid}_product_{productid}.jpg"
# └── y.csv  Contains the target: prdtypecode
# Can be either a direct path (starting with /)
# or a relative path using datascience as root (ex: "data" for "datascience/data")
ORIGINAL_DATA_DIR="data/originals"
# Directory where remaining data (not already in a dataset) are stored
REMAINING_DATA_DIR="data/datasets/_remaining"
