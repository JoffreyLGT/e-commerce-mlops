#:schema https://json.schemastore.org/pyproject.json

[tool.poetry]
name = "datascience"
version = "0.1.0"
description = "Create and test product classification models and track their performance using MLFlow."
authors = ["Joffrey Lagut <j.lagut@live.fr>"]
readme = "../README.md"
license = "MIT"
repository = "https://github.com/JoffreyLGT/e-commerce-mlops"
documentation = "https://github.com/JoffreyLGT/e-commerce-mlops#readme"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/JoffreyLGT/e-commerce-mlops/issues"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"

# Tensorflow is not using standard dependencies declaration, so we must use markers
# To understand them, see https://github.com/tensorflow/tensorflow/blob/25ac2a5882f1f225a33671e76a209ff99e2bdf4f/tensorflow/tools/pip_package/setup.py#L153
tensorflow = { version = "2.13.0" }
# Install the TensorFlow package built by AWS if the user is running
# Linux on an Aarch64 machine.
tensorflow-cpu-aws = { version = "2.13.0", markers = "platform_system=='Linux' and (platform_machine=='arm64' or platform_machine=='aarch64')" }
# Install the TensorFlow package built by Apple if the user is running
# macOS on an Apple Silicon machine.
tensorflow-macos = { version = "2.13.0", markers = "platform_system=='Darwin' and platform_machine=='arm64'" }
# Metal for macOS users
tensorflow-metal = { version = "1.0.0", platform = "darwin" }
# Install the TensorFlow package built by Intel if the user is on a
# Windows machine.
# Not tested yet
tensorflow-intel = { version = "2.13.0", markers = "platform_system=='Windows'" }

mlflow = "^2.6.0"
pydantic = {version = "*", extras = ["dotenv"]}
python-json-logger = "^2.0.7"

[tool.poetry.group.dev.dependencies]
ruff = "0.*"
types-tensorflow = "^2.12.0.6"
black = "^23.7.0"
mypy = "^1.5.1"
pandas-stubs = "*"
pytest = "^7.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "basic"
exclude = ["**/.pytest_cache", "**/__pycache__", ".ruff_cache"]

[tool.mypy]
strict = true
warn_return_any = false
implicit_reexport = false
namespace_packages = true
plugins = ["numpy.typing.mypy_plugin", "pydantic.mypy"]

[[tool.mypy.overrides]]
module = "gdown"
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = [
    # action:message:category:module:line
    "ignore::UserWarning",
    "ignore::DeprecationWarning:passlib",
    "ignore::DeprecationWarning:tensorflow",
]
